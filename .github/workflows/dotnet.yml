# This workflow will build a .NET MAUI project with Core library and Tests
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET MAUI Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Install MAUI workloads
      run: |
        dotnet workload install maui
        dotnet workload install maui-android
        dotnet workload install maui-ios
        dotnet workload install maui-maccatalyst
    
    - name: Restore dependencies
      run: dotnet restore Prayerify.sln
    
    - name: Build Core library
      run: dotnet build Prayerify.Core/Prayerify.Core.csproj --no-restore --configuration Release
    
    - name: Build Tests
      run: dotnet build Prayerify.Tests/Prayerify.Tests.csproj --no-restore --configuration Release
    
    - name: Run Tests
      run: dotnet test Prayerify.Tests/Prayerify.Tests.csproj --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./Prayerify.Tests/TestResults/coverage.cobertura.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
